user www-data;
worker_processes auto;
pid /run/nginx.pid;

worker_rlimit_nofile 200000;

events {
	worker_connections 1024;
	use epoll;
	multi_accept on;
	accept_mutex on;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=cached:200m max_size=2G;
	log_format custom '$remote_addr [$time_local] "$host" $scheme "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time $upstream_response_time';
	log_format json_analytics escape=json '{'
            '"request_length": "$request_length", ' # request length (including headers and body)
            '"remote_addr": "$remote_addr", ' # client IP
            '"time_local": "$time_local", '
            '"request_uri": "$request_uri", ' # full path and arguments if the request
            '"args": "$args", ' # args
            '"status": "$status", ' # response status code
            '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
            '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
            '"http_referer": "$http_referer", ' # HTTP referer
            '"http_user_agent": "$http_user_agent", ' # user agent
            '"http_host": "$http_host", ' # the request Host: header
            '"server_name": "$server_name", ' # the name of the vhost serving the request
            '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
            '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
            '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
            '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
            '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
            '"upstream_response_length": "$upstream_response_length", ' # upstream response length
            '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
            '"scheme": "$scheme", ' # http or https
            '"request_method": "$request_method", ' # request method
            '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
            '"gzip_ratio": "$gzip_ratio" '
            '}';
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 6;
    gzip_buffers 128 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css image/svg image/xml font/woff2 application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "msie6";

	map $http_upgrade $connection_upgrade {
	    default upgrade;
	    ''      close;
	}


	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
